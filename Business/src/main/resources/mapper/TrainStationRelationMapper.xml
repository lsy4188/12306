<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itlsy.mapper.TrainStationRelationMapper">
  <resultMap id="BaseResultMap" type="itlsy.entry.TrainStationRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="train_id" jdbcType="BIGINT" property="trainId" />
    <result column="departure" jdbcType="VARCHAR" property="departure" />
    <result column="arrival" jdbcType="VARCHAR" property="arrival" />
    <result column="start_region" jdbcType="VARCHAR" property="startRegion" />
    <result column="end_region" jdbcType="VARCHAR" property="endRegion" />
    <result column="departure_flag" jdbcType="BIT" property="departureFlag" />
    <result column="arrival_flag" jdbcType="BIT" property="arrivalFlag" />
    <result column="departure_time" jdbcType="TIMESTAMP" property="departureTime" />
    <result column="arrival_time" jdbcType="TIMESTAMP" property="arrivalTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, train_id, departure, arrival, start_region, end_region, departure_flag, arrival_flag, 
    departure_time, arrival_time, create_time, update_time, del_flag
  </sql>
  <select id="selectByExample" parameterType="itlsy.entry.TrainStationRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from train_station_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_station_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from train_station_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="itlsy.entry.TrainStationRelationExample">
    delete from train_station_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="itlsy.entry.TrainStationRelation">
    insert into train_station_relation (id, train_id, departure, 
      arrival, start_region, end_region, 
      departure_flag, arrival_flag, departure_time, 
      arrival_time, create_time, update_time, 
      del_flag)
    values (#{id,jdbcType=BIGINT}, #{trainId,jdbcType=BIGINT}, #{departure,jdbcType=VARCHAR}, 
      #{arrival,jdbcType=VARCHAR}, #{startRegion,jdbcType=VARCHAR}, #{endRegion,jdbcType=VARCHAR}, 
      #{departureFlag,jdbcType=BIT}, #{arrivalFlag,jdbcType=BIT}, #{departureTime,jdbcType=TIMESTAMP}, 
      #{arrivalTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="itlsy.entry.TrainStationRelation">
    insert into train_station_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="trainId != null">
        train_id,
      </if>
      <if test="departure != null">
        departure,
      </if>
      <if test="arrival != null">
        arrival,
      </if>
      <if test="startRegion != null">
        start_region,
      </if>
      <if test="endRegion != null">
        end_region,
      </if>
      <if test="departureFlag != null">
        departure_flag,
      </if>
      <if test="arrivalFlag != null">
        arrival_flag,
      </if>
      <if test="departureTime != null">
        departure_time,
      </if>
      <if test="arrivalTime != null">
        arrival_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=BIGINT},
      </if>
      <if test="departure != null">
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="arrival != null">
        #{arrival,jdbcType=VARCHAR},
      </if>
      <if test="startRegion != null">
        #{startRegion,jdbcType=VARCHAR},
      </if>
      <if test="endRegion != null">
        #{endRegion,jdbcType=VARCHAR},
      </if>
      <if test="departureFlag != null">
        #{departureFlag,jdbcType=BIT},
      </if>
      <if test="arrivalFlag != null">
        #{arrivalFlag,jdbcType=BIT},
      </if>
      <if test="departureTime != null">
        #{departureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arrivalTime != null">
        #{arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="itlsy.entry.TrainStationRelationExample" resultType="java.lang.Long">
    select count(*) from train_station_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update train_station_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.trainId != null">
        train_id = #{record.trainId,jdbcType=BIGINT},
      </if>
      <if test="record.departure != null">
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.arrival != null">
        arrival = #{record.arrival,jdbcType=VARCHAR},
      </if>
      <if test="record.startRegion != null">
        start_region = #{record.startRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.endRegion != null">
        end_region = #{record.endRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.departureFlag != null">
        departure_flag = #{record.departureFlag,jdbcType=BIT},
      </if>
      <if test="record.arrivalFlag != null">
        arrival_flag = #{record.arrivalFlag,jdbcType=BIT},
      </if>
      <if test="record.departureTime != null">
        departure_time = #{record.departureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.arrivalTime != null">
        arrival_time = #{record.arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update train_station_relation
    set id = #{record.id,jdbcType=BIGINT},
      train_id = #{record.trainId,jdbcType=BIGINT},
      departure = #{record.departure,jdbcType=VARCHAR},
      arrival = #{record.arrival,jdbcType=VARCHAR},
      start_region = #{record.startRegion,jdbcType=VARCHAR},
      end_region = #{record.endRegion,jdbcType=VARCHAR},
      departure_flag = #{record.departureFlag,jdbcType=BIT},
      arrival_flag = #{record.arrivalFlag,jdbcType=BIT},
      departure_time = #{record.departureTime,jdbcType=TIMESTAMP},
      arrival_time = #{record.arrivalTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="itlsy.entry.TrainStationRelation">
    update train_station_relation
    <set>
      <if test="trainId != null">
        train_id = #{trainId,jdbcType=BIGINT},
      </if>
      <if test="departure != null">
        departure = #{departure,jdbcType=VARCHAR},
      </if>
      <if test="arrival != null">
        arrival = #{arrival,jdbcType=VARCHAR},
      </if>
      <if test="startRegion != null">
        start_region = #{startRegion,jdbcType=VARCHAR},
      </if>
      <if test="endRegion != null">
        end_region = #{endRegion,jdbcType=VARCHAR},
      </if>
      <if test="departureFlag != null">
        departure_flag = #{departureFlag,jdbcType=BIT},
      </if>
      <if test="arrivalFlag != null">
        arrival_flag = #{arrivalFlag,jdbcType=BIT},
      </if>
      <if test="departureTime != null">
        departure_time = #{departureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arrivalTime != null">
        arrival_time = #{arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="itlsy.entry.TrainStationRelation">
    update train_station_relation
    set train_id = #{trainId,jdbcType=BIGINT},
      departure = #{departure,jdbcType=VARCHAR},
      arrival = #{arrival,jdbcType=VARCHAR},
      start_region = #{startRegion,jdbcType=VARCHAR},
      end_region = #{endRegion,jdbcType=VARCHAR},
      departure_flag = #{departureFlag,jdbcType=BIT},
      arrival_flag = #{arrivalFlag,jdbcType=BIT},
      departure_time = #{departureTime,jdbcType=TIMESTAMP},
      arrival_time = #{arrivalTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>